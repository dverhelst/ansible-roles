upstream gitlab {
  server unix:/home/{{ gitlab.user.name }}/gitlab/tmp/sockets/gitlab.socket;
}

server {
    listen *:80;
    server_name {{ gitlab.fqdn }};
    server_tokens off;
    root /nowhere; # this doesn't have to be a valid path since we are redirecting, you don't have to change it.
    rewrite ^ https://$server_name$request_uri permanent;
}
server {
    listen 443 ssl;
    server_name {{ gitlab.fqdn }};     # e.g., server_name source.example.com;
    server_tokens off;     # don't show the version number, a security best practice
    root /home/{{ gitlab.user.name }}/gitlab/public;

    ssl on;
    ssl_certificate /etc/nginx/ssl/{{ gitlab.fqdn }}.crt;
    ssl_certificate_key /etc/nginx/ssl/{{ gitlab.fqdn }}.key;
    ssl_protocols SSLv3 TLSv1 TLSv1.2;
    ssl_ciphers AES:HIGH:!ADH:!MD5;
    ssl_prefer_server_ciphers on;

    # individual nginx logs for this gitlab vhost
    access_log  /var/log/nginx/{{ gitlab.fqdn }}_access.log;
    error_log   /var/log/nginx/{{ gitlab.fqdn }}_error.log;

    location / {
    # serve static files from defined root folder;.
    # @gitlab is a named location for the upstream fallback, see below
    try_files $uri $uri/index.html $uri.html @gitlab;
    }

    # if a file, which is not found in the root folder is requested,
    # then the proxy pass the request to the upsteam (gitlab unicorn)
    location @gitlab {
      proxy_read_timeout 300; # https://github.com/gitlabhq/gitlabhq/issues/694
      proxy_connect_timeout 300; # https://github.com/gitlabhq/gitlabhq/issues/694
      proxy_redirect     off;
  
      proxy_set_header   X-Forwarded-Proto $scheme;
      proxy_set_header   Host              $http_host;
      proxy_set_header   X-Real-IP         $remote_addr;
  
      proxy_pass http://gitlab;
    }
}

